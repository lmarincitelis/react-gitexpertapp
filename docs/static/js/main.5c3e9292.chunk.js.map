{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcC,OACI,mCACG,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMV,SACC,uBACGO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,e,+BCRfG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdC,EAFc,iDAEiCC,UAAUH,GAF3C,+DAGFI,MAAOF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXrB,kBAedM,GAfc,4CAAH,sDCERO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAW,OAAhB,UACK,qBAAKC,IAAOf,EAAMgB,IAAON,IACzB,kCAAMA,EAAN,WCDAO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAExB,EAA4Bd,mBAAS,IAArC,mBASC,GATD,UCDyB,SAAEc,GAEvB,MAAyBd,mBAAS,CAE/BqB,KAAK,GACLa,SAAS,IAHZ,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAZAC,qBAAU,WAEPxB,EAAUC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAInB,CAAEpB,IAEEqB,EDVaK,CAAa1B,IAA7BO,EAAP,EAAOA,KAAP,EAAaa,QAGX,OACG,qCACC,mCAAMpB,EAAN,OAEA,qBAAMgB,UAAU,YAAhB,SAIST,EAAKE,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEvBnBgB,EAAe,WACxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAKA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGF,6BAEM2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MChB3B6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.5c3e9292.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n   const [inputValue, setInputValue]=useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n       e.preventDefault();\r\n      if (inputValue.trim().length > 2){ \r\n       setCategories(cats => [ inputValue, ...cats]);\r\n       setInputValue('');\r\n    } \r\n   }\r\n\r\n    return(\r\n        <>\r\n           <form onSubmit={handleSubmit}>\r\n            <input\r\n               type=\"text\"\r\n               value={ inputValue }\r\n               onChange={handleInputChange}\r\n            />\r\n            </form>\r\n        </>    \r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}"," export const getGifs = async ( category) => {\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=5AloPfEAY0ScUVGp9yDOvcyP4jKniHNH`;\r\n    const resp= await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n       return {\r\n           id: img.id,\r\n           title: img.title,\r\n           url: img.images?.downsized_medium.url\r\n       }\r\n    })\r\n    \r\n   return gifs;\r\n\r\n\r\n }","import React, { useState, useEffect } from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return(\r\n        <div className= \"card\">\r\n             <img src= { url } alt= { title } />\r\n             <p> { title } </p>\r\n         \r\n        </div>\r\n    )\r\n\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n const   [images, setImages]=useState([]); \r\n\r\n//   useEffect(()=>{\r\n//      getGifs( category ) \r\n//      .then ( imgs=> setImages( imgs ));\r\n//   }, [ category ])\r\n\r\n  //const [count,setCount] = useState(0)  \r\n\r\n  const {data, loading}= useFetchGifs(category);\r\n\r\n//   getGifs();\r\n    return (\r\n       <>\r\n        <h3> {category} </h3>\r\n        \r\n        <div  className=\"card-grid\">\r\n           \r\n           \r\n              {\r\n                 data.map( img =>(\r\n                    <GifGridItem \r\n                      key= {img.id}\r\n                      { ...img }  \r\n                    />\r\n                 ))\r\n              }\r\n           \r\n         </div>\r\n         </> \r\n    )\r\n\r\n    }   ","\r\nimport {useEffect, useState} from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs=( category) => {\r\n \r\n     const [state, setState]= useState({\r\n\r\n        data:[],\r\n        loading: true\r\n     });\r\n\r\n     useEffect(()=>{\r\n\r\n        getGifs(  category ) \r\n          .then( imgs=>{\r\n              setState({\r\n                  data: imgs,\r\n                  loading: false\r\n              });\r\n          })\r\n\r\n     }, [ category])\r\n\r\n     return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['one punch']);\r\n\r\n /*    const handleAdd = () => {\r\n        setCategories ([...categories, 'HunterX']);\r\n    } */\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories}></AddCategory>\r\n            <hr />\r\n            {/* <button onClick={handleAdd}> Agregar</button> */}\r\n\r\n          <ol>\r\n            {\r\n                categories.map(category => \r\n                    <GifGrid\r\n                      key={category} \r\n                      category={category}\r\n                    />\r\n                )\r\n            }    \r\n          </ol>  \r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GitExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}